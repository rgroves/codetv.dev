---
import { Image } from '@unpic/astro';
import { createImageUrl } from '../util/cloudinary';
import { getSupporters } from '../util/sanity';

const supporters: Awaited<ReturnType<typeof getSupporters>> = [];

if (supporters.length < 1) {
	return null;
}
---

<div class="supporter-list">
	{
		supporters
			.filter(
				(s) => !['jlengstorf', 'jlengstorf-test'].includes(s.username ?? ''),
			)
			.map((supporter) => {
				const photo = supporter.photo;
				const level = supporter.subscription?.level;

				if (!photo || !photo.public_id) {
					return;
				}

				const isGold = level?.toLowerCase()?.includes('gold');
				const avatarSize = isGold ? 160 : 80;

				const src = createImageUrl(photo.public_id, {
					height: avatarSize,
					width: avatarSize,
					crop: 'fill',
				});

				return (
					<a
						href={`/profile/${supporter.username}`}
						title={supporter.name}
						class:list={{ gold: isGold }}
					>
						<Image
							src={src}
							alt={supporter.name}
							width={avatarSize}
							height={avatarSize}
						/>
					</a>
				);
			})
	}
</div>

<style>
	.supporter-list {
		display: grid;
		gap: 4px;
		grid-auto-flow: row dense;
		grid-template-columns: repeat(auto-fill, 40px);
		inline-size: 100%;
		justify-content: center;
		margin-block-start: 20px;
		max-inline-size: 800px;

		a {
			border-radius: 3px;
			display: block;
			opacity: 0.85;
			outline: 1px solid transparent;
			transition-duration: 150ms;
			transition-timing-function: linear;
			transition-property: outline-color, opacity;

			&:has(:hover, :active, :focus) {
				opacity: 1;
				outline: 1px solid var(--text-muted);
			}

			&.gold {
				grid-column: span 2;
				grid-row: span 2;
			}
		}

		img {
			block-size: 100%;
			border-radius: 3px;
			display: block;
			inline-size: 100%;
			margin: 0;
		}
	}
</style>
