---
import { getFeaturedSeries, getNextEarlyAccessEpisode, getRecentEpisodes } from '../../util/sanity';
import Card from '../cards/card.astro';

function getTagline(date: string) {
	const dateString = new Date(date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' });

	return `Supporters only until ${dateString}`;
}

const earlyAccess: Awaited<ReturnType<typeof getNextEarlyAccessEpisode>> | false = false;
const recentEps: Awaited<ReturnType<typeof getRecentEpisodes>> = [];
const series: Awaited<ReturnType<typeof getFeaturedSeries>> = [];
---

<section class="series">
	{earlyAccess ? (
		<h2>Early access for supporters</h2>
		<div class="row early-access">
			<Card
				image={{
					public_id: earlyAccess.thumbnail.public_id,
					alt: earlyAccess.thumbnail.alt,
				}}
				tagline={getTagline(earlyAccess.publish_date!)}
				title={earlyAccess.series}
				description={earlyAccess.short_description}
				link={earlyAccess.path}
				linkText="Watch Now"
			>
				<Fragment slot="details">
					<p class="episode-number">{earlyAccess.episodeNumber}</p>
					<p class="episode-title">{earlyAccess.title}</p>
				</Fragment>
			</Card>
		</div>
	) : null}

	{recentEps ? (
		<h2>Newly added</h2>
		<div class="row three-up">
			{recentEps.map((ep) => {
				return (
					<Card
						image={{
							public_id: ep.thumbnail.public_id!,
							alt: ep.thumbnail.alt!,
						}}
						tagline={new Date(ep.publish_date!).toLocaleDateString('en-US', {
							month: 'short',
							day: 'numeric',
						})}
						title={ep.series}
						link={ep.path}
						linkText="Watch Now"
						youtube_id={ep.youtube_id}
					>
						<Fragment slot="details">
							<p class="episode-number">{ep.episodeNumber}</p>
							<p class="episode-title">{ep.title}</p>
						</Fragment>
					</Card>
				)
			})}
		</div>
	) : null}

	<h2>CodeTV original series</h2>
	<div class="row three-up">
		{series.map((s) => {

			const seasons =
				s.total_season_count === 1
					? '1 season'
					: s.total_season_count + ' seasons';

			const episodes =
				s.total_episode_count === 1
					? '1 episode'
					: s.total_episode_count + ' episodes';

			return (
				<Card
					image={{
						public_id: s.image!.public_id!,
						alt: s.title,
					}}
					title={s.title}
					description={s.description}
					link={s.path}
					linkText="See Episodes"
				>
					<Fragment slot="tagline">
						<p class="season-count">{seasons}</p>
						<p class="episode-count">{episodes}</p>
					</Fragment>
				</Card>
			)
		})}
	</div>
</section>

<style>
	.series {
		background: var(--black);
		display: flex;
		flex-direction: column;
		gap: 20px;
		padding-block-start: 80px;
		padding-block-end: 60px;
	}

	h2 {
		font-family: var(--font-family);
		font-size: clamp(1rem, 2cqi, 1.5rem);
		font-weight: 600;
		margin-block-start: 40px;
		padding-inline: max((100% - var(--max-width)) / 2, 5%);
	}
</style>
